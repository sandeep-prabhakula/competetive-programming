class Solution {
    public int coinChange(int[] ar, int n) {
        int dp[][] = new int[ar.length+1][n+1];
        for(int i=0;i<ar.length+1;i++){
            for(int j=1;j<n+1;j++){
                if(i==0)dp[i][j] = Integer.MAX_VALUE-1;
                dp[i][j] = 0;
            }
        }
        for(int j=1;j<n+1;j++){
            if(j%ar[0]==0)dp[1][j] = j/ar[0];
            else dp[1][j] = Integer.MAX_VALUE-1;
        }
        for(int i=2;i<ar.length+1;i++){
            for(int j=1;j<n+1;j++){
                if(ar[i-1]<=j)dp[i][j] = Math.min(dp[i-1][j],1+dp[i][j-ar[i-1]]);
                else dp[i][j] = dp[i-1][j];
            }
        }
        if(dp[ar.length][n]==Integer.MAX_VALUE-1)return -1;
        return dp[ar.length][n];
    }
}