/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head==null)return null;
        if(head.next == null){
            head = null;
            return head;
        }
        ListNode A = head;
        int len = 0;
        while(A!=null){
            len++;
            A = A.next;
        }
        ListNode temp = head;
        if(n>=len){
            temp = temp.next;
            return temp;
        }
        int i=1;
        while(i<len-n){
            i++;
            temp = temp.next;
        }
        temp.next = temp.next.next;
        return head;
    }
}