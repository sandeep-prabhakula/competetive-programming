class Solution {
    public int numDistinct(String s, String t) {

//Memoization
        // int dp[][] = new int[s.length()+1][t.length()+1];
        // for(int []i:dp)Arrays.fill(i,-1);
        // return f(s,t,s.length()-1,t.length()-1,dp);

//Tabulation
        return d(s,t,s.length(),t.length());
    }
    public static int f(String s,String t,int i,int j,int [][]dp){
        if(j<0)return 1;
        if(i<0)return 0;
        if(dp[i][j]!=-1)return dp[i][j];
        if(s.charAt(i)==t.charAt(j))return dp[i][j] = f(s,t,i-1,j-1,dp)+f(s,t,i-1,j,dp);
        return dp[i][j] = f(s,t,i-1,j,dp);
    }
    public static int d(String s,String t,int n,int m){
        int dp[][] = new int[n+1][m+1];
        for(int i=0;i<m+1;i++){
            dp[0][i] = 0;
        }
        for(int i=0;i<n+1;i++){
            dp[i][0] = 1;
        }
        for(int i=1;i<n+1;i++){
            for(int j=1;j<m+1;j++){
                if(s.charAt(i-1)==t.charAt(j-1))dp[i][j] = dp[i-1][j-1]+dp[i-1][j];
                else dp[i][j] = dp[i-1][j];
            }
        }
        return dp[n][m];
    }
}