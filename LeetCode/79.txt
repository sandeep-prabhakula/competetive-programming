class Solution {
    public boolean exist(char[][] board, String word) {
        boolean [][]grid = new boolean[board.length][board[0].length];
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(getWord(board,grid,i,j,word))return true;
            }
        }
        return false;
    }
    
    public boolean getWord(char[][]board,boolean[][]grid,int row,int col,String word){
        if(word.isEmpty())return true;
        if(row==board.length||col==board[0].length||row==-1 || col==-1){
            return false;
        }
        if(grid[row][col])return false;
        if(board[row][col]==word.charAt(0)){
            grid[row][col] = true;
            if(getWord(board,grid,row,col+1,word.substring(1)))return true;
            if(getWord(board,grid,row,col-1,word.substring(1)))return true;
            if(getWord(board,grid,row+1,col,word.substring(1)))return true;
            if(getWord(board,grid,row-1,col,word.substring(1)))return true;
            grid[row][col] = false;
        }
        return false;
    }
}