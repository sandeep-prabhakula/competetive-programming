public class Solution {
    public ArrayList<ArrayList<Integer>> permute(ArrayList<Integer> A) {
        ArrayList<ArrayList<Integer>>ans = new ArrayList();
        ArrayList<Integer>ds = new ArrayList();
        boolean[]freq = new boolean[A.size()];
        rePerm(A,ds,ans,freq);
        return ans;
    }
    public void rePerm(ArrayList<Integer> A,ArrayList<Integer>ds,ArrayList<ArrayList<Integer>>ans,boolean[]freq){
        if(ds.size()==A.size()){
            ans.add(new ArrayList(ds));
            return ;
        }
        for(int i=0;i<A.size();i++){
            if(!freq[i]){
                freq[i] = true;
                ds.add(A.get(i));
                rePerm(A,ds,ans,freq);
                ds.remove(ds.size()-1);
                freq[i] = false;
            }
        }
    }
}
