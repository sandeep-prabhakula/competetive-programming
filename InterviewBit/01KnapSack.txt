public class Solution {
    public int solve(ArrayList<Integer> A, ArrayList<Integer> B, int C) {
        int N = A.size();
        for(int i=0;i<1002;i++){
            for(int j=0;j<1002;j++){
                t[i][j] = -1;
            }
        }
        return knapSack(A,B,C,N);
    }
    static int t[][] = new int[1002][1002];
    public static int knapSack(ArrayList<Integer> A, ArrayList<Integer> B, int C,int N){
        if(N==0 || C== 0)return 0;
        if(t[N][C]!=-1)return t[N][C];
        if(B.get(N-1)<=C){
            return t[N][C] = Math.max(A.get(N-1)+knapSack(A,B,C-B.get(N-1),N-1),
            knapSack(A,B,C,N-1));
        }
        else return t[N][C] = knapSack(A,B,C,N-1);
    }
}
