public class Solution {
    public int isValid(String A) {
        Stack<Character>stack=new Stack<>();
        for(int i=0;i<A.length();i++){
            if(A.charAt(i)=='('||A.charAt(i)=='['||A.charAt(i)=='{')stack.push(A.charAt(i));
            else if(A.charAt(i)==')' && !stack.isEmpty()&& stack.peek()=='(') stack.pop();
            else if(A.charAt(i)=='}' && !stack.isEmpty()&& stack.peek()=='{') stack.pop();
            else if(A.charAt(i)==']' && !stack.isEmpty()&& stack.peek()=='[') stack.pop();
// if the stack is empty and string contains only closing paranthesis
           else if(A.charAt(i)==')'||A.charAt(i)=='}'||A.charAt(i)==']' && stack.isEmpty()) return 0;
           else return 0;
       }
       if(!stack.isEmpty()) return 0;
       return 1;
    }
}