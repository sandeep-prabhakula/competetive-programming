import java.util.*;
public class Solution {
	public static long houseRobber(int[] ar) {
        int n = ar.length;
        if(n==1)return ar[0];
		List<Integer>t1 = new ArrayList();
        List<Integer>t2 = new ArrayList();
        for(int i=0;i<n;i++){
            if(i!=0)t1.add(ar[i]);
            if(i!=n-1)t2.add(ar[i]);
        }
        return Math.max(maxSum(t1),maxSum(t2));
	}
    public static long maxSum(List<Integer>ar){
        int n = ar.size();
        long dp[] = new long[n];
        Arrays.fill(dp,-1);
        dp[0] = ar.get(0);
        for(int i=1;i<n;i++){
            long pick = ar.get(i);
            if(i>1)pick += dp[i-2];
            long notPick = 0+dp[i-1];
            dp[i] = Math.max(pick,notPick);
        }
        return dp[n-1];
    }
}