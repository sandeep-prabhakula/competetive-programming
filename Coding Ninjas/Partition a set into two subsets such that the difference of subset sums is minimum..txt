import java.util.*;

public class Solution {
	public static int minSubsetSumDifference(int[] arr, int n) {
		int sum = 0;
        for(int i:arr)sum+=i;
        ArrayList<Integer>list = subsetSum(arr,sum);
        int min = Integer.MAX_VALUE;
        for(int i:list){
            min = Math.min(min,Math.abs(sum-2*i));
        }
        return min;
	}
    public static ArrayList<Integer> subsetSum(int[]a,int sum){
        boolean [][] dp = new boolean[a.length+1][sum+1];
        for(int i=0;i<a.length+1;i++){
            for(int j=0;j<sum+1;j++){
                if(i==0)dp[i][j] = false;
                if(j==0)dp[i][j] = true;
            }
        }
        for(int i=1;i<a.length+1;i++){
            for(int j=1;j<sum+1;j++){
                if(a[i-1]<=j)dp[i][j] = dp[i-1][j]||dp[i-1][j-a[i-1]];
                else dp[i][j] = dp[i-1][j];
            }
        }
        ArrayList<Integer>list = new ArrayList<>();
        for(int i=0;i<=sum/2;i++){
            if(dp[a.length][i])list.add(i);
        }
        return list;
    }
}