// Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            int N = Integer.parseInt(in.readLine());
            String input_line[] = in.readLine().trim().split("\\s+");
            int arr[] = new int[N];
            for(int i = 0;i < N;i++)
                arr[i] = Integer.parseInt(input_line[i]);
            
            Solution ob = new Solution();
            int x = ob.equalPartition(N, arr);
            if(x == 1)
                System.out.println("YES");
            else
                System.out.println("NO");
        }
    }
}// } Driver Code Ends


// User function Template for Java

class Solution{
    static boolean dp[][] = new boolean[102][100005];
    static int equalPartition(int n, int a[])
    {
        int sum = 0;
        for(int i:a)sum+=i;
        if((sum&1)!=0)return 0;
        return subsetSum(a,sum/2);
    }
    public static int subsetSum(int[]a,int s){
        for(int i=0;i<a.length;i++){
            for(int j=0;j<s;j++){
                if(i==0)dp[i][j] = false;
                if(j==0)dp[i][j] = true;
            }
        }
        for(int i=1;i<a.length+1;i++){
            for(int j=1;j<s+1;j++){
                if(a[i-1]<=j){
                    dp[i][j] = dp[i-1][j]||dp[i-1][j-a[i-1]];
                }
                else dp[i][j] = dp[i-1][j];
            }
        }
        return dp[a.length][s]?1:0;
    }
}