import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int t = Integer.parseInt(br.readLine());
        while(t-->0){
            String[]temp = br.readLine().split(" ");
            int n = Integer.parseInt(temp[0]);
            int m = Integer.parseInt(temp[1]);
            int b = Integer.parseInt(temp[2]);
            int mat[][] = new int[n][m];
            for(int[]i:mat)Arrays.fill(i,1);
            while(b-->0){
                String [] obs = br.readLine().split(" ");
                int i = Integer.parseInt(obs[0]);
                int j = Integer.parseInt(obs[1]);
                mat[i][j] = 0;
            }
            bw.write(path(n,m,mat)+"\n");
        }
        bw.flush();
    }
    public static int path(int n,int m,int[][]matrix){
        int mod = 1000000007;
        int[][] dp = new int[n][m];
        boolean flag=false;
        for(int i=0;i<n;i++){
            if(matrix[i][0]==0){
                flag=true;
            }
            dp[i][0] = (flag)?0:1;
        }
        flag=false;
        for (int j=0;j<m;j++){
            if(matrix[0][j]==0)
                flag=true;
            dp[0][j] = (flag)?0:1;
        }
        for (int i=1;i<n;i++){
            for (int j=1;j<m;j++){
                if(matrix[i][j]==0)
                    dp[i][j]=0;
                else
                    dp[i][j] = ((dp[i-1][j]+dp[i-1][j-1])%mod+dp[i][j-1])%mod;
            }
        }
        return dp[n-1][m-1];
    }
}